<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models ="clr-namespace:_253505Pavlovich.UI.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:entities="clr-namespace:_253505_Pavlovich.Domain.Entities;assembly=253505Pavlovich.Domain"
             xmlns:converter ="clr-namespace:_253505Pavlovich.UI.ValueConverters"
             xmlns:icons ="clr-namespace:_253505Pavlovich.UI.Models"
             x:DataType="models:CarBrandsPageViewModel"
             x:Class="_253505Pavlovich.UI.Pages.CarBrandsPage"
             Title="CarBrandsPage">

    <ContentPage.Behaviors>
        <toolkit:EventToCommandBehavior EventName="Appearing"
                                        Command="{Binding UpdateGroupListCommand}"/>
    </ContentPage.Behaviors>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:PriceToColorValueConverter x:Key="PriceToColor"/>
            <converter:ObjectToBoolValueConverter x:Key="IsExist"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Add brand"
                     IconImageSource="{FontImage FontFamily=fontawesome, Color=White, Size=30, Glyph={x:Static icons:Icons.SquarePlus}}"
                     Order="Secondary"
                     Command="{Binding AddBrandCommand}"/>
        <ToolbarItem Text="Add advertisement"
                     IconImageSource="{FontImage FontFamily=fontawesome, Color=White, Size=30, Glyph={x:Static icons:Icons.SquarePlus}}"
                     Order="Secondary"
                     Command="{Binding AddAdvertisementCommand}"
                     IsEnabled="{Binding SelectedBrand, Converter={StaticResource IsExist}}"/>
    </ContentPage.ToolbarItems>

    <Grid RowDefinitions="auto,auto"
          ColumnDefinitions="*">

        <Picker Title="Select car brand"
                x:Name="CarBrandPicker"
                ItemsSource="{Binding CarBrands}"
                SelectedItem="{Binding SelectedBrand}"
                ItemDisplayBinding="{Binding Name}"
                Grid.Column="0"
                Grid.Row="0">

            <Picker.Behaviors>
                <toolkit:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                Command="{Binding UpdateMemberListCommand}"/>
            </Picker.Behaviors>
        </Picker>

        <CollectionView x:Name="SaleAdvertisementsView"
                        ItemsSource="{Binding SaleAdvertisements}"
                        Grid.Column="0"
                        Grid.Row="1">
            
            <CollectionView.Header>
                <VerticalStackLayout IsVisible ="{Binding SelectedBrand, Converter={StaticResource IsExist}}">
                    <Border>
                        <Grid>
                            <Label Text="{Binding SelectedBrand.Description}"/>
                        </Grid>
                    </Border>
                </VerticalStackLayout>
            </CollectionView.Header>

            <CollectionView.ItemsLayout>
                <LinearItemsLayout Orientation="Vertical"
                                   ItemSpacing="5"/>
            </CollectionView.ItemsLayout>
            
            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="entities:SaleAdvertisement">
                    <Border Margin="5"
                            StrokeShape="RoundRectangle 40, 40, 40, 40"
                            Stroke="{Binding Price, Converter={StaticResource PriceToColor}}"
                            StrokeThickness="3">
                        <Grid RowDefinitions="*"
                              ColumnDefinitions="*">

                            <Grid.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding 
                                                          Source={RelativeSource AncestorType={x:Type models:CarBrandsPageViewModel} },
                                                          Path=ShowDetailsCommand}"
                                                      CommandParameter="{Binding}"/>
                            </Grid.GestureRecognizers>

                            <Label Text="{Binding Name}"
                                   Grid.Row="0"
                                   Grid.Column="0"
                                   HorizontalOptions="Center"
                                   Margin="10"/>
                        </Grid>
                    </Border>
                </DataTemplate>
            </CollectionView.ItemTemplate>

        </CollectionView>
    </Grid>
</ContentPage>